// "Rational Buoyancy" pre-release
// Author: JadeOfMaar
// "It can finally sink now!" (Making submarine engineering easier. If you don't like it, use more lift surface.)


@PHYSICSGLOBALS
{
	@buoyancyScalar = 1 // Default is 1.2
}


// Command
@PART:HAS[#category[Pods],~CrewCapacity[>0],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.2
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Pods],#CrewCapacity[>0],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.6
	rationalBuoyancy = Yes
}


// Tanks
@PART:HAS[@RESOURCE[Ore],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.1
	rationalBuoyancy = Yes
}
@PART:HAS[@RESOURCE[Lead],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.1
	rationalBuoyancy = Yes
}
@PART:HAS[@RESOURCE[*Metal*],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.3
	rationalBuoyancy = Yes
}
@PART:HAS[@RESOURCE[RocketParts],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.3
	rationalBuoyancy = Yes
}
@PART:HAS[@RESOURCE[*Ballast],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.3
	rationalBuoyancy = Yes
}
@PART:HAS[@RESOURCE[*Uran*],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.3
	rationalBuoyancy = Yes
}
@PART:HAS[@RESOURCE[Depleted*],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.3
	rationalBuoyancy = Yes
}
@PART:HAS[@RESOURCE[Nuclear*],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.3
	rationalBuoyancy = Yes
}
@PART:HAS[#category[FuelTank],~buoyancy,~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.8
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Propulsion],~buoyancy,~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.8
	rationalBuoyancy = Yes
}


// Engines
@PART:HAS[#category[Engine],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.4
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Engine],#TechRequired[*?uclear*],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy = 0.2
}
@PART:HAS[#category[Engine],#TechRequired[*?usion*],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy = 0.2
}
@PART:HAS[#category[Engine],#TechRequired[*Reactions],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy = 0.2
}
@PART:HAS[#category[Engine],#TechRequired[antimatterPower],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy = 0.2
}
@PART:HAS[#category[Engine],#TechRequired[*unifiedFieldTheory],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy = 0.2
}


// Control
@PART:HAS[#category[Control],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.35
	rationalBuoyancy = Yes
}


// Robotics
@PART:HAS[#category[Robotics],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.3
	rationalBuoyancy = Yes
}


// Coupling
@PART:HAS[#category[Coupling],#title[*Plate],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.8
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Coupling],#title[*Coupler],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.8
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Coupling],~buoyancy,~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.25
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Coupling],@MODULE[ModuleDockingNode]]:FOR[00RationalBuoyancy]
{
	@buoyancy += 0.15
}


// Payload
@PART:HAS[#category[Payload],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.7
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Payload],#title[*?russ*],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy = 0.2
}
@PART:HAS[#category[Payload],#title[*?irder*],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy = 0.2
}


// Structural
@PART:HAS[#category[Structural],#title[*?russ*],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.1
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Structural],#title[*?irder*],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.1
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Structural],#title[*?dapter*],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.6
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Structural],#title[*Panel*],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.8
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Structural],#title[*Coupler*],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.8
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Structural],#title[*Pad],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.6
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Structural],~buoyancy,~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.2
	rationalBuoyancy = Yes
}


// Science
@PART:HAS[#category[Science],#title[*Goo*],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.55
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Science],#title[*Bay*],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.7
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Science],~buoyancy,~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.45
	rationalBuoyancy = Yes
}


// Utility
@PART:HAS[#category[Utility],@MODULE[Module*Harvester],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.25
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Utility],@MODULE[Module*Converter],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.3
	rationalBuoyancy = Yes
}
@PART:HAS[~category[Pods],#CrewCapacity[>0],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.6
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Utility],~buoyancy,~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.2
	rationalBuoyancy = Yes
}

@PART:HAS[#category[Utility],@MODULE[Module*Chute],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy += 0.5
}
@PART:HAS[#category[Utility],@MODULE[RealChuteModule],#rationalBuoyancy]:NEEDS[RealChute]:FOR[00RationalBuoyancy]
{
	@buoyancy += 0.5
}
@PART:HAS[#category[Utility],@RESOURCE[*]:HAS[#maxAmount[>100]],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy += 0.15 
}


// Aero
@PART:HAS[#category[Aero],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.75
	rationalBuoyancy = Yes
}


// Legs
// Wheels
@PART:HAS[#category[Ground],#title[*?ear*],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.7
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Ground],#title[*?heel*],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.7
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Ground],#title[Rovemax*],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.8
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Ground],~buoyancy,~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.4
	rationalBuoyancy = Yes
}


// Thermal
@PART:HAS[#category[Thermal],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.8
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Thermal],@RESOURCE[Ablator]]:FOR[00RationalBuoyancy]
{
	@buoyancy -= 0.1
}
@PART:HAS[#category[Thermal],@RESOURCE[AblativeShielding]]:NEEDS[DeadlyReentry]:FOR[00RationalBuoyancy]
{
	@buoyancy -= 0.1
}


// Electrical
@PART:HAS[#category[Electrical],~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.5
	rationalBuoyancy = Yes
}
@PART:HAS[#category[Electrical],@MODULE[ModuleGenerator],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy = 0.3
}
@PART:HAS[#category[Electrical],@MODULE[ModuleCoreHeat],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy = 0.3
}


// Later
@PART:HAS[@MODULE[ModuleLiftingSurface],#CrewCapacity[>0],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy += 0.1
}
@PART:HAS[@MODULE[ModuleLiftingSurface],~CrewCapacity[>0],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy += 0.3
}
@PART:HAS[@MODULE[FARWingAerodynamicModel],~CrewCapacity[>0],#rationalBuoyancy]:NEEDS[FerramAerospaceResearch]:FOR[00RationalBuoyancy]
{
	@buoyancy += 0.3
}
@PART:HAS[@MODULE[ModuleLiftingSurface],#category[Engine],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy -= 0.15
}
@PART:HAS[@MODULE[ModuleLiftingSurface],#category[Thermal],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy -= 0.3
}
@PART:HAS[@MODULE[ModuleResourceIntake],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy += 0.1
}
@PART:HAS[@MODULE[Module*SolarPanel],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy += 0.2
}
@PART:HAS[@MODULE[ModuleControlSurface],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy += 0.3
}
@PART:HAS[@MODULE[ModuleControlSurface],#rationalBuoyancy]:NEEDS[FerramAerospaceResearch]:FOR[00RationalBuoyancy]
{
	@buoyancy += 0.3
}
@PART:HAS[@MODULE[ModuleControlSurface],#category[Engine],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy -= 0.15
}
@PART:HAS[@MODULE[ModuleAeroSurface],#rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	@buoyancy += 0.2
}


// Catch-all
@PART:HAS[~rationalBuoyancy]:FOR[00RationalBuoyancy]
{
	%buoyancy = 0.7
	rationalBuoyancy = Yes
	rationalBuoyancyMiscItem = Yes
}

// = = = = 
// Base parts mods
// = = = = 


// KPBS
@PART[KKAOSS*]:NEEDS[PlanetaryBaseInc]:FOR[RationalBuoyancy]
{
	%buoyancy = 0.2
	%rationalBuoyancy = Yes
}
@PART[KKAOSS*]:HAS[#CrewCapacity[>0]]:NEEDS[PlanetaryBaseInc]:FOR[RationalBuoyancy]
{
	@buoyancy += 0.35
}


// SSPXr
@PART[sspx-inflatable-*]:NEEDS[StationPartsExpansionRedux]:FOR[RationalBuoyancy]
{
	%buoyancy = 1
	%rationalBuoyancy = Yes
}
@PART[sspx-expandable-centrifuge-*]:NEEDS[StationPartsExpansionRedux]:FOR[RationalBuoyancy]
{
	%buoyancy = 0.7
	%rationalBuoyancy = Yes
}


// WBI Pathfinder
@PART[wbi*]:HAS[@MODULE[WBIPackingBox]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[Konkrete]]]]:FOR[RationalBuoyancy]
{
	%buoyancy = 0.1
	%rationalBuoyancy = Yes
}


// = = = = 
// Ship parts mods
// = = = = 


// OPT Spaceplane
@PART[opt_vtol_wrap*|opt_vtol_jumpa*]:NEEDS[OPT|OPT_Legacy]:FOR[RationalBuoyancy]
{
	@buoyancy -= 0.1
}
@PART[engine_darkDrive]:NEEDS[OPT]:FOR[RationalBuoyancy]
{
	@buoyancy = 0.1
}


// = = = = 
// Plugin mods
// = = = = 


@PART:HAS[@MODULE[FSbuoyancy]]:NEEDS[Firespitter]:FOR[00RationalBuoyancy]
{
	%buoyancy = 1
	%rationalBuoyancy = Yes
}

// Kerbalism
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_PressureControl],#running[?rue]],#rationalBuoyancy]:NEEDS[KerbalismDefault,ProfileDefault]:FOR[00RationalBuoyancy]
{
	@buoyancy += 0.1
}


// Final

@PART:HAS[#rationalBuoyancy]:FOR[zRationalBuoyancy]
{
	@buoyancy *= #$@RHDScalar/BuoyancyMult$
}
@PART:HAS[#buoyancy[>1],#rationalBuoyancy]:FOR[zRationalBuoyancy]
{
	@buoyancy = 1 // Krakens if > 1
}
@PART:HAS[#buoyancy[<0.1],#rationalBuoyancy]:FOR[zRationalBuoyancy]
{
	@buoyancy = 0.1
}
@PART:HAS[#rationalBuoyancy]:FOR[zRationalBuoyancy]
{
	@description = #<#acfffc><b>Buoyancy</b>: $buoyancy$</color><br>$description$
}